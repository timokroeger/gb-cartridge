; TODO: License

; The gameboy cartridge data and address signals are multiplexed with
; switchable transceivers.
;
; SET0-2 control the OE (output-enable) lines of the transceivers.
; SET3 selects the direction of the data transceiver (low=in, high=out).
;
; read_addr SM ->|      SET      |        IN         |
; pin number   ->| 3 | 2 | 1 | 0 |  8  |   7..0      |
; ---------------+---+---+---+---+-----+-------------+
; data_out SM  ->|      OUT      | IN  |     OUT     |
; pin number   ->|12 |11 |10 | 9 |  0  |   7..0      |
; ---------------+---+---+---+---+-----+-------------+
;       DATA_IN  | 0 | 1 | 1 | 0 | CLK |  D7..D0 in  |
;       DATA_OUT | 1 | 1 | 1 | 0 | CLK |  D7..D0 out |
;       ADDR_LO  | 0 | 1 | 0 | 1 | CLK |  A7..A0     |
;       ADDR_HI  | 0 | 0 | 1 | 1 | CLK | A14..A8     |

.define public MUXED_SIGNAL_BITS 8
.define public SIGNAL_BITS 3
.define public CONTROL_BITS 4
.define public CONTROL_MASK 0x1111
.define public DATA_IN      0b0110
.define public DATA_OUT     0b1110
.define public ADDR_LO      0b0101
.define public ADDR_HI      0b0011

; PICO clock = 125MHz
; GB clock = 4^22Hz = ~4Mhz
.define CLOCK_RATIO 30

;------------------------------------------------------------------------------;

.program read_addr

.define public CLK 8

    ; Synchronize once so that the addr sample delay actually starts hafter the
    ; rising edge.
    wait 0 pin CLK

.wrap_target
    ; The rising clock edge starts a bus access.
    ; Wait a half GB clock for the address lines to become ready.
    wait 1 pin CLK [CLOCK_RATIO/2]

    ; Read the address, ADDR_HI is selected already.
    in pins, 7 ; A14-A8
    set pins, ADDR_LO
    in pins, 8 ; A7-A0
    ; autopush
.wrap

;------------------------------------------------------------------------------;

.program data_out_in

.define public CLK 0

    ; Update data at the falling clock edge (middle of cycle).
    ; In case of write (gameboy to cartridge) the GB also has the data ready at
    ; this time.
    wait 0 pin CLK

    ; 16bit autopull is enabled for the RX FIFO to receive following data:
    ; 16bit output data to select DATA_IN or DATA_OUT + D0-D7 pins
    ; 8bit pindirs=0x00 for DATA_IN, pindirs=0xFF for DATA_OUT
    ; 8bit pindirs=0x00 to reset GPIOs to inputs
    ; 16bit output data to select ADDR_HI for the next cycle

    ; Write output data (or not when selecting DATA_IN).
    out pins, 16
    out pindirs, 16

    ; Read data. It will discarded later for DATA_OUT.
    in pins, 8

    ; Release the data lines at the end of the cycle.
    wait 1 pin CLK
    out pindirs, 16
    out pins, 16

;------------------------------------------------------------------------------;

.program memory_benchmark
.side_set 1

    set x, 0x5 side 0
    in x, 4 side 1
    in x, 4 side 0
    in x, 4 side 1
    in x, 4 side 0
    in null, 16 side 1

.wrap_target
    nop  side 0 [15]
    push side 1
    pull side 1
    nop  side 0 [15]
.wrap
